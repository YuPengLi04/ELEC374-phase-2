`timescale 1ns/10ps
module BranchDatapath_tb;

  reg Zout, Rout, HIout, LOout, Zhighout, Zlowout, PCout, MDRout, InPortout, Cout,
		R0out, R1out, R2out, R3out, R4out, R5out, R6out, R7out, R8out, R9out, R10out, R11out,
		R12out, R13out, R14out, R15out;
  reg MARin, Zin, PCin, MDRin, IRin, Yin, HIin, LOin, Rin, ZhighIn, ZlowIn, R0in, R1in,
		R2in, R3in, R4in, R5in, R6in, R7in, R8in, R9in, R10in, R11in, R12in, R13in, R14in, R15in;
  reg IncPC, Read, Gra, Grb, Grc, BAout;
  reg clock, clear;
  reg [31:0] Mdatain;
  reg [4:0] opcode;

  parameter  Default = 4'b0000, Reg_load1a = 4'b0001, Reg_load1b = 4'b0010, Reg_load2a = 4'b0011,
                       Reg_load2b = 4'b0100, Reg_load3a = 4'b0101, T0 = 4'b0110, T1 = 4'b0111,
                       T2 = 4'b1000, T3 = 4'b1001, T4 = 4'b1010, T5 = 4'b1011, T6 = 4'b1100;
							  
  reg [3:0] Present_state = Default;

  DataPath DUT(clock, clear, Gra, Grb, Grc, Zout, R0out, R1out, R2out, R3out, R4out, R5out, R6out,
					R7out, R8out, R9out, R10out, R11out, R12out, R13out, R14out, R15out, Rout, HIout, 
					LOout, Zhighout, Zlowout, PCout, MDRout, InPortout, Cout, Zin, R0in, R1in, R2in, R3in,
					R4in, R5in, R6in, R7in, R8in, R9in, R10in, R11in, R12in, R13in, R14in, R15in, Yin, Rin,
					PCin, IRin, HIin, LOin, MARin, MDRin, Read, ZhighIn, ZlowIn, BAout, Mdatain//, opcode
					);

initial
begin
  clear = 0;
  clock = 0;
  forever #10 clock = ~clock;
end

always@(posedge clock)
  begin
    case(Present_state)
      Default : Present_state = Reg_load1a;
      Reg_load1a : Present_state = Reg_load1b;
      Reg_load1b : Present_state = Reg_load2a;
      Reg_load2a : Present_state = Reg_load2b;
      Reg_load2b : Present_state = Reg_load3a;
      Reg_load3a : Present_state = T0;
      T0 : Present_state = T1;
      T1 : Present_state = T2;
      T2 : Present_state = T3;
      T3 : Present_state = T4;
      T4 : Present_state = T5;
		T5 : Present_state = T6;
    endcase
  end
  
always@(Present_state)
  begin
    case(Present_state)
      Default: begin
          Gra<=0; Grb<=0; Grc<=0; Zout<=0; R0out<=0;
			 Rout<=0; HIout<=0; LOout<=0; Zhighout<=0; 
			 Zlowout<=0; PCout<=0; MDRout<=0; InPortout<=0;
			 Cout<=0; Zin<=0; Yin<=0; Rin<=0; PCin<=0;
			 IRin<=0; HIin<=0; LOin<=0; MARin<=0; BAout<=0;
			 MDRin<=0; Read<=0; ZhighIn<=0; ZlowIn<=0;
			 R0out<=0; R1out<=0; R2out<=0; R3out<=0; R4out<=0;
			 R5out<=0; R6out<=0; R7out<=0; R8out<=0; R9out<=0;
			 R10out<=0; R11out<=0; R12out<=0; R13out<=0; R14out<=0;
			 R15out<=0; R0in<=0; R1in<=0; R2in<=0; R3in<=0; R4in<=0;
			 R5in<=0; R6in<=0; R7in<=0; R8in<=0; R9in<=0;
			 R10in<=0; R11in<=0; R12in<=0; R13in<=0; R14in<=0;
			 R15in<=0;
      end
      Reg_load1a: begin
		    Read<=1; MDRin<=1;
          Mdatain<=32'h00000022;
      end
      Reg_load1b: begin
	       Read<=0; MDRin<=0;
          MDRout<=1; R1in<=1;
      end
      Reg_load2a: begin
		    MDRout<=0; R1in<=0; // initialize R1 with value 0x22
	      
	       Read<=1; MDRin<=1;
          Mdatain<=32'h00000024;
      end
      Reg_load2b: begin
	       Read<=0; MDRin<=0;
          MDRout<=1; PCin<=1;
      end
      Reg_load3a: begin 
	       MDRout<=0; PCin<=0; //initialize PC with value 0x24
	      
		    PCout<=1; MARin<=1; ZlowIn<=1; //incrementing pc counter by 1
      end
      T0: begin
			 PCout<=0; MARin<=0; ZlowIn<=0;
			 Zlowout<=1; PCin<=1;
      end
      T1: begin
			 Zlowout<=0; PCin<=0;
			 Read<=1; MDRin<=1;
          Mdatain<=32'h9880001B;  //"brzr r1,27" = 32'h9880001B; for "brnz r1,27" = 32'h98A0001B; "brpl r1,27" = 32'h98C0001B; "brmi r1,27" = 32'h98E0001B
      end
      T2: begin
          Read<=0; MDRin<=0;
          MDRout<=1; IRin<=1;
      end
      T3: begin
          MDRout<=0; IRin<=0;
          Rout<=1; Gra<=1; CONin<=1;
      end
      T4: begin
			 Rout<=0; Gra<=0; CONin<=0;
          PCout<=1; Yin<=1;
      end
      T5: begin
          PCout<=0; Yin<=0;
			 Cout<=1; ZlowIn<=1;
      end
		T6: begin
			 Cout<=0; ZlowIn<=0;
			 CONout<=1; PCin<=1;
		end
    endcase
  end
endmodule
